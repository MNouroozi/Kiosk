@{
    ViewData["Title"] = "پیگیری نامه";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container text-center">
    <div class="row justify-content-center align-items-center">
        <div class="col-12 col-md-8 col-lg-6">
            <!-- کارت شیشه‌ای اصلی -->
            <div class="card-glass-large fade-in">
                <div class="text-center mb-4">
                    <h3 class="tracking-title">پیگیری وضعیت نامه</h3>
                </div>

                <i class="bi bi-file-earmark-text tracking-icon-large"></i>
                <p class="tracking-description-light">برای پیگیری وضعیت نامه خود، شماره نامه را در قسمت زیر وارد کنید.</p>

                <form id="trackingForm" class="mt-4">
                    <div class="mb-4">
                        <input type="text" id="trackingCode" class="form-control-glass form-control-lg"
                               placeholder="شماره نامه را وارد کنید" required>
                    </div>

                    <!-- دکمه‌های کنار هم -->
                    <div class="d-flex gap-3">
                        <button type="submit" class="btn-glass-primary btn-lg flex-fill">
                            <i class="bi bi-search me-2"></i> پیگیری نامه
                        </button>
                        <button id="backButton" type="button" class="btn-glass-secondary btn-lg flex-fill" onclick="goToHome()">
                            <i class="bi bi-house-door"></i>منوی اصلی
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- بخش نمایش نتایج -->
    <div class="row justify-content-center">
        <div class="col-12">
            <div id="resultsContainer" class="card-glass-large fade-in mt-4" style="display: none; min-height: 300px;">
                <h4 class="text-center mb-4 text-white">نتایج جستجو</h4>

                <div class="loading text-white" id="loading">
                    <div class="spinner-border text-light" role="status">
                        <span class="visually-hidden">در حال جستجو...</span>
                    </div>
                    <p class="mt-2">در حال جستجو...</p>
                </div>

                <div id="resultsContent">
                    <div class="table-responsive-glass">
                        <table class="table table-glass">
                            <thead>
                                <tr>
                                    <th class="w-66"><i class="bi bi-card-text me-2"></i> موضوع نامه</th>
                                    <th class="w-17"><i class="bi bi-hash me-2"></i> شماره نامه</th>
                                    <th class="w-17"><i class="bi bi-calendar-date me-2"></i> تاریخ ارسال</th>
                                </tr>
                            </thead>
                            <tbody id="resultTableBody">
                                <!-- نتایج اینجا نمایش داده می‌شوند -->
                            </tbody>
                        </table>
                        <div id="noResults" class="text-center text-light mt-3" style="display:none;"></div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<!-- مودال بهبود یافته با تم لایت -->
<div class="modal fade" id="detailModal" tabindex="-1" data-bs-backdrop="false">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-centered">
        <div class="modal-content modal-light-theme">
            <div class="modal-header border-bottom-0">
                <h5 class="modal-title d-flex align-items-center gap-2">
                    <i class="bi bi-diagram-3 text-primary"></i>
                    گردش نامه
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalBody" style="max-height: 70vh; overflow-y: auto;">
                <!-- محتوای جزئیات اینجا نمایش داده می‌شود -->
            </div>
            <div class="modal-footer border-top-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #4361ee;
        --secondary-color: #3a0ca3;
        --glass-bg: rgba(255, 255, 255, 0.15);
        --glass-border: rgba(255, 255, 255, 0.2);
        --shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    }

    /* کارت شیشه‌ای بزرگ */
    .card-glass-large {
        background: var(--glass-bg);
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
        border: 1px solid var(--glass-border);
        border-radius: 25px;
        padding: 50px 40px;
        text-align: center;
        box-shadow: var(--shadow);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        width: 100%;
        min-height: 500px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin-bottom: 30px;
    }

    .tracking-icon-large {
        font-size: 5rem;
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 30px;
    }

    .tracking-title {
        font-family: Vazir, sans-serif;
        font-weight: 700;
        font-size: 2rem;
        margin-bottom: 20px;
        color: white;
    }

    .tracking-description-light {
        font-family: Vazir, sans-serif;
        font-weight: 400;
        font-size: 1.2rem;
        margin-bottom: 30px;
        color: rgba(255, 255, 255, 0.9);
        line-height: 1.6;
    }

    /* فرم کنترل شیشه‌ای */
    .form-control-glass {
        font-family: Vazir, sans-serif;
        font-weight: 400;
        text-align: center;
        border-radius: 15px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        padding: 20px 25px;
        font-size: 1.3rem;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        backdrop-filter: blur(10px);
    }

        .form-control-glass::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .form-control-glass:focus {
            border-color: rgba(255, 255, 255, 0.6);
            box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.1);
            background: rgba(255, 255, 255, 0.15);
            color: white;
        }

    /* دکمه شیشه‌ای اولیه */
    .btn-glass-primary {
        font-family: Vazir, sans-serif;
        font-weight: 500;
        background: linear-gradient(135deg, rgba(67, 97, 238, 0.85), rgba(58, 12, 163, 0.85));
        border: none;
        border-radius: 50px;
        padding: 20px 45px;
        font-size: 1.4rem;
        margin-top: 25px;
        box-shadow: 0 5px 20px rgba(67, 97, 238, 0.3);
        transition: all 0.3s ease;
        color: white;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.25);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-glass-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(67, 97, 238, 0.5);
            background: linear-gradient(135deg, rgba(67, 97, 238, 0.95), rgba(58, 12, 163, 0.95));
            color: white;
        }

    /* دکمه شیشه‌ای ثانویه برای بازگشت */
    .btn-glass-secondary {
        font-family: Vazir, sans-serif;
        font-weight: 500;
        background: linear-gradient(135deg, rgba(255, 215, 0, 0.7), rgba(218, 165, 32, 0.7));
        border: none;
        border-radius: 50px;
        padding: 20px 45px;
        font-size: 1.4rem;
        margin-top: 25px;
        box-shadow: 0 5px 20px rgba(255, 215, 0, 0.25);
        transition: all 0.3s ease;
        color: white;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        flex-direction: row-reverse;
    }

        .btn-glass-secondary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(255, 215, 0, 0.4);
            background: linear-gradient(135deg, rgba(255, 215, 0, 0.8), rgba(218, 165, 32, 0.8));
            color: white;
        }

    /* استایل‌های جدول شیشه‌ای - بهبود یافته */
    .table-responsive-glass {
        border-radius: 15px;
        overflow: hidden;
        backdrop-filter: blur(10px);
        width: 100%;
        margin: 0 auto;
    }

    .table-glass {
        width: 100%;
        table-layout: fixed;
        margin: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table-glass th,
        .table-glass td {
            text-align: center;
            white-space: normal;
            word-wrap: break-word;
            padding: 20px 15px; /* افزایش ارتفاع سطرها */
            border: none;
        }

            .table-glass th.w-66,
            .table-glass td.w-66 {
                width: 66%;
                text-align: right;
                padding-right: 20px;
            }

            .table-glass th.w-17,
            .table-glass td.w-17 {
                width: 17%;
            }

        /* بهبود رنگ‌آمیزی ردیف‌ها با جداکننده مدرن */
        .table-glass tbody tr:nth-child(odd) {
            background-color: rgba(255, 255, 255, 0.1);
            position: relative;
        }

        .table-glass tbody tr:nth-child(even) {
            background-color: rgba(255, 255, 255, 0.05);
            position: relative;
        }

        /* جداکننده مدرن بین ردیف‌ها */
        .table-glass tbody tr:not(:last-child)::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 5%;
            width: 90%;
            height: 1px;
            background: linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.3) 20%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.3) 80%, transparent 100%);
        }

    /* انیمیشن‌ها */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in {
        animation: fadeIn 0.8s ease forwards;
    }

    .loading {
        display: none;
        text-align: center;
        padding: 30px;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }

    /* ریسپانسیو */
    @@media (max-width: 768px) {
        .card-glass-large {
            padding: 30px 20px;
            min-height: 400px;
        }

        .tracking-icon-large {
            font-size: 3.5rem;
        }

        .tracking-title {
            font-size: 1.6rem;
        }

        .tracking-description-light {
            font-size: 1rem;
        }

        .form-control-glass {
            padding: 15px 20px;
            font-size: 1.1rem;
        }

        .btn-glass-primary,
        .btn-glass-secondary {
            padding: 18px 35px;
            font-size: 1.2rem;
        }

        .table-glass th,
        .table-glass td {
            padding: 15px 10px; /* حفظ ارتفاع مناسب در موبایل */
            font-size: 0.9rem;
        }
    }

    /* هاور برای ردیف‌های جدول */
    .table-glass tbody tr:hover {
        background-color: rgba(67, 97, 238, 0.2) !important;
        transform: scale(1.01);
        transition: all 0.2s ease;
        cursor: pointer;
    }

    /* استایل Timeline مدرن - سمت راست برای تم لایت */
    .timeline-modern-right-light {
        position: relative;
        padding: 20px 0;
    }

        .timeline-modern-right-light::before {
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            right: 30px;
            width: 3px;
            background: linear-gradient(to bottom, rgba(67, 97, 238, 0.8), rgba(58, 12, 163, 0.8));
            border-radius: 10px;
        }

    .timeline-item-modern-right-light {
        position: relative;
        margin-bottom: 30px;
        padding-right: 70px;
    }

    .timeline-marker-modern-right-light {
        position: absolute;
        right: 18px;
        top: 0;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2;
        box-shadow: 0 0 0 4px rgba(67, 97, 238, 0.2);
        transition: all 0.3s ease;
    }

        .timeline-marker-modern-right-light.current {
            animation: pulse 2s infinite;
            box-shadow: 0 0 0 8px rgba(67, 97, 238, 0.3);
        }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(67, 97, 238, 0.7);
        }

        70% {
            box-shadow: 0 0 0 10px rgba(67, 97, 238, 0);
        }

        100% {
            box-shadow: 0 0 0 0 rgba(67, 97, 238, 0);
        }
    }

    .timeline-content-modern-right-light {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 15px;
        padding: 20px;
        border: 1px solid rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        color: #333;
    }

        .timeline-content-modern-right-light.current {
            background: rgba(67, 97, 238, 0.1);
            border: 1px solid rgba(67, 97, 238, 0.3);
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(67, 97, 238, 0.15);
        }

        .timeline-content-modern-right-light:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
        }

    .current-badge-light {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 5px;
        margin-bottom: 10px;
    }

    /* مودال مرکز شده */
    .modal-centered .modal-dialog {
        min-height: calc(100vh - 60px);
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    /* تم لایت برای مودال */
    .modal-light-theme {
        background: white;
        color: #333;
        border-radius: 20px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
        border: none;
    }

        .modal-light-theme .modal-header {
            background: transparent;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .modal-light-theme .modal-title {
            color: #333;
            font-weight: 600;
        }

        .modal-light-theme .modal-footer {
            background: transparent;
            border-top: 1px solid rgba(0, 0, 0, 0.1);
        }

    /* کارت اطلاعات مدرن برای تم لایت */
    .info-card-modern-light {
        background: rgba(248, 249, 250, 0.9);
        border-radius: 15px;
        padding: 20px;
        border: 1px solid rgba(0, 0, 0, 0.08);
        margin-bottom: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }

        .info-card-modern-light h6 {
            color: #333;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 600;
        }

    .info-item-light {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid rgba(0, 0, 0, 0.08);
    }

        .info-item-light:last-child {
            border-bottom: none;
        }

    .info-label-light {
        color: #666;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .info-value-light {
        color: #333;
        font-weight: 600;
    }

    .modal {
        z-index: 1060 !important;
    }

    .modal-backdrop {
        z-index: 1050 !important;
    }

    header {
        z-index: 1000 !important;
    }

    /* اسکرول صاف */
    html {
        scroll-behavior: smooth;
    }

    body {
        overflow-x: hidden;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // تابع رفتن به صفحه اصلی
    function goToHome() {
        window.location.href = '/Home/Index';
    }

    document.getElementById('trackingForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const code = document.getElementById('trackingCode').value.trim();

        if (!code) {
            alert('لطفاً شماره نامه را وارد کنید');
            return;
        }

        searchTrackingCode(code);
    });

    function searchTrackingCode(code) {
        // نمایش loading
        document.getElementById('loading').style.display = 'block';
        document.getElementById('resultsContent').style.display = 'none';
        document.getElementById('resultsContainer').style.display = 'block';

        fetch(`/Letter/Search?trackingCode=${encodeURIComponent(code)}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('خطا در ارتباط با سرور');
                }
                return response.json();
            })
            .then(data => {
                displayResults(data);
            })
            .catch(error => {
                console.error('Error:', error);
                showError('خطا در دریافت اطلاعات');
            })
            .finally(() => {
                document.getElementById('loading').style.display = 'none';
                document.getElementById('resultsContent').style.display = 'block';

                // اسکرول به بخش نتایج - بهبود یافته
                setTimeout(() => {
                    const resultsContainer = document.getElementById('resultsContainer');
                    const containerPosition = resultsContainer.getBoundingClientRect().top + window.pageYOffset - 100;
                    window.scrollTo({
                        top: containerPosition,
                        behavior: 'smooth'
                    });
                }, 100);
            });
    }

    function displayResults(data) {
        const tbody = document.getElementById('resultTableBody');
        const noResults = document.getElementById('noResults');

        tbody.innerHTML = '';

        if (data.length === 0) {
            noResults.style.display = 'block';
            noResults.innerHTML = `
                <i class="bi bi-search text-warning" style="font-size: 3rem;"></i>
                <h5 class="mt-3">نتیجه‌ای یافت نشد</h5>
                <p class="text-light">هیچ نامه‌ای با این شماره پیدا نشد</p>
            `;
            return;
        }

        noResults.style.display = 'none';

        data.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td class="w-66">
                    <div class="subject-cell" title="${item.docSubject || 'بدون موضوع'}">
                        ${item.docSubject || 'بدون موضوع'}
                    </div>
                </td>
                <td class="w-17">${item.exportEntityNumber || '-'}</td>
                <td class="w-17">${item.exportDate ? formatDate(item.exportDate) : '-'}</td>
            `;

            row.addEventListener('click', () => {
                showRecordDetails(item);
            });

            tbody.appendChild(row);
        });
    }

    function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('fa-IR');
    }

    function showError(message) {
        const tbody = document.getElementById('resultTableBody');
        const noResults = document.getElementById('noResults');

        tbody.innerHTML = '';
        noResults.innerHTML = `
            <i class="bi bi-x-circle text-warning" style="font-size: 3rem;"></i>
            <h5 class="mt-3">خطا</h5>
            <p class="text-light">${message}</p>
        `;
        noResults.style.display = 'block';
    }

    function showRecordDetails(record) {
        const modalBody = document.getElementById('modalBody');

        modalBody.innerHTML = `
            <div class="text-center py-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">در حال بارگذاری...</span>
                </div>
                <p class="mt-2 text-dark">در حال دریافت اطلاعات گردش نامه...</p>
            </div>
        `;

        if (!record.etc || !record.fec) {
            modalBody.innerHTML = `
                <div class="alert alert-danger text-center">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                    <p class="mt-2">خطا در اطلاعات رکورد</p>
                    <small>اطلاعات لازم برای جستجو موجود نمی‌باشد</small>
                </div>
            `;
            const modal = new bootstrap.Modal(document.getElementById('detailModal'));
            modal.show();
            return;
        }

        fetch(`/Letter/GetTrackingHistory?etc=${record.etc}&fec=${record.fec}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('خطا در دریافت اطلاعات گردش نامه');
                }
                return response.json();
            })
            .then(historyData => {
                displayTrackingHistory(record, historyData);
            })
            .catch(error => {
                console.error('Error:', error);
                modalBody.innerHTML = `
                    <div class="alert alert-danger text-center">
                        <i class="bi bi-exclamation-triangle-fill"></i>
                        <p class="mt-2">خطا در دریافت اطلاعات گردش نامه</p>
                        <small>${error.message}</small>
                    </div>
                `;
            });

        const modal = new bootstrap.Modal(document.getElementById('detailModal'));
        modal.show();
    }

    function displayTrackingHistory(record, historyData) {
        const modalBody = document.getElementById('modalBody');

        if (!historyData || historyData.length === 0 || historyData.error) {
            modalBody.innerHTML = `
                <div class="alert alert-warning text-center">
                    <i class="bi bi-info-circle-fill"></i>
                    <p class="mt-2">اطلاعات گردش نامه یافت نشد</p>
                    <small>ETC: ${record.etc}, FEC: ${record.fec}</small>
                </div>
            `;
            return;
        }

        // مرتب کردن تاریخ‌ها از جدید به قدیمی (معکوس)
        const sortedHistory = [...historyData].sort((a, b) => {
            const dateA = new Date(a.receiveDate || a.ReceiveDate || '2000-01-01');
            const dateB = new Date(b.receiveDate || b.ReceiveDate || '2000-01-01');
            return dateB - dateA; // تغییر به dateB - dateA برای معکوس کردن
        });

        let historyHTML = `
            <div class="info-card-modern-light mb-4">
                <h6><i class="bi bi-file-earmark-text"></i> اطلاعات نامه</h6>
                <div class="info-item-light">
                    <span class="info-label-light">شماره نامه:</span>
                    <span class="info-value-light">${record.exportEntityNumber || '-'}</span>
                </div>
                <div class="info-item-light">
                    <span class="info-label-light">موضوع:</span>
                    <span class="info-value-light">${record.docSubject || 'بدون موضوع'}</span>
                </div>
                <div class="info-item-light">
                    <span class="info-label-light">تاریخ ارسال:</span>
                    <span class="info-value-light">${record.exportDate ? formatDate(record.exportDate) : '-'}</span>
                </div>
            </div>

            <div class="d-flex align-items-center justify-content-between mb-3">
                <h5 class="mb-0" style="color: #333;">گردش نامه</h5>
                <span class="badge bg-primary">${sortedHistory.length} مرحله</span>
            </div>

            <div class="timeline-modern-right-light">
        `;

        sortedHistory.forEach((item, index) => {
            const isCurrent = index === 0; // اولین رکورد (جدیدترین) فعلی است
            const receiverName = item.receiverName || item.ReceiverName || 'نامشخص';
            const receiveDate = item.receiveDate || item.ReceiveDate;

            // تعیین آیکون بر اساس موقعیت
            let iconClass = "bi-arrow-left"; // تغییر به فلش راست برای جریان معکوس
            if (index === 0) iconClass = "bi-pin-map"; // اولین آیتم (آخرین وضعیت فعلی)
            if (index === sortedHistory.length - 1) iconClass = "bi-arrow-left"; // آخرین آیتم (اولین وضعیت)

            // تعیین رنگ بر اساس موقعیت
            let markerColor = "bg-primary";
            if (index === 0) markerColor = "bg-success"; // وضعیت فعلی
            if (index === sortedHistory.length - 1) markerColor = "bg-info"; // وضعیت اولیه

            historyHTML += `
                <div class="timeline-item-modern-right-light">
                    <div class="timeline-marker-modern-right-light ${markerColor} ${isCurrent ? 'current' : ''}">
                        <i class="bi ${iconClass} text-white"></i>
                    </div>
                    <div class="timeline-content-modern-right-light ${isCurrent ? 'current' : ''}">
                        ${isCurrent ? `<div class="current-badge-light"><i class="bi bi-geo-alt"></i> مدرک الان اینجاست</div>` : ''}
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h6 class="mb-0" style="color: #333;">${receiverName}</h6>
                            <small class="text-muted">${receiveDate ? formatDateTime(receiveDate) : 'تاریخ نامشخص'}</small>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">مرحله ${sortedHistory.length - index}</small>
                            <small class="text-muted">گیرنده: ${receiverName}</small>
                        </div>
                    </div>
                </div>
            `;
        });

        historyHTML += `</div>`;

        modalBody.innerHTML = historyHTML;
    }

    function formatDateTime(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('fa-IR') + ' - ' + date.toLocaleTimeString('fa-IR');
    }

    // بهبود اسکرول صفحه
    document.addEventListener('DOMContentLoaded', function() {
        // اطمینان از نمایش صحیح صفحه
        document.body.style.overflowX = 'hidden';

        // تنظیم ارتفاع برای کارت‌ها
        const cards = document.querySelectorAll('.card-glass-large');
        cards.forEach(card => {
            card.style.minHeight = 'auto';
        });
    });
</script>