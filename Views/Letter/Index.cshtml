@{
    ViewData["Title"] = "پیگیری نامه";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}

<link rel="stylesheet" href="~/css/letter.css" asp-append-version="true" />

<div class="container text-center">
    <div class="row justify-content-center align-items-center">
        <div class="col-12 col-md-8 col-lg-6">
            <!-- کارت شیشه‌ای اصلی -->
            <div class="card-glass-large fade-in">
                <div class="text-center mb-4">
                    <h3 class="tracking-title">پیگیری وضعیت نامه</h3>
                </div>

                <i class="bi bi-file-earmark-text tracking-icon-large"></i>
                <p class="tracking-description-light">برای پیگیری وضعیت نامه خود، شماره نامه را در قسمت زیر وارد کنید.</p>

                <form id="trackingForm" class="mt-4">
                    <div class="mb-4">
                        <input type="text" id="trackingCode" class="form-control-glass form-control-lg"
                               placeholder="شماره نامه را وارد کنید" required>
                    </div>

                    <!-- دکمه‌های کنار هم -->
                    <div class="d-flex gap-3">
                        <button type="submit" class="btn-glass-primary btn-lg flex-fill">
                            <i class="bi bi-search me-2"></i> پیگیری نامه
                        </button>
                        <button id="backButton" type="button" class="btn-glass-secondary btn-lg flex-fill" onclick="goToHome()">
                            <i class="bi bi-house-door"></i>منوی اصلی
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- بخش نمایش نتایج -->
    <div class="row justify-content-center">
        <div class="col-12">
            <div id="resultsContainer" class="card-glass-large fade-in mt-4" style="display: none; min-height: 300px;">
                <!-- هدر جدید برای نتایج -->
                <div class="results-header text-center mb-4">
                    <i class="bi bi-search-heart results-header-icon"></i>
                    <h4 class="results-header-title">نتایج جستجو</h4>
                    <p class="results-header-subtitle" id="resultsCount">لیست نامه‌های یافت شده</p>
                </div>

                <div class="loading text-white" id="loading">
                    <div class="spinner-border text-light" role="status">
                        <span class="visually-hidden">در حال جستجو...</span>
                    </div>
                    <p class="mt-2">در حال جستجو...</p>
                </div>

                <div id="resultsContent">
                    <div class="cards-container" id="cardsContainer">
                        <!-- کارت‌ها اینجا نمایش داده می‌شوند -->
                    </div>
                    <div id="noResults" class="text-center text-light mt-3" style="display:none;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- مودال بهبود یافته با تم دارک هماهنگ -->
<div class="modal fade" id="detailModal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content modal-dark-theme">
            <div class="modal-header text-center border-bottom-0">
                <div class="w-100">
                    <i class="bi bi-diagram-3 text-primary modal-header-icon"></i>
                    <h5 class="modal-title text-white">گردش نامه</h5>
                </div>
                <button type="button" class="btn-close btn-close-white position-absolute" style="top: 20px; left: 20px;" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalBody" style="max-height: 70vh; overflow-y: auto;">
                <!-- محتوای جزئیات اینجا نمایش داده می‌شود -->
            </div>
            <div class="modal-footer border-top-0">
                <button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
</div>

<!-- دکمه برگشت به بالا -->
<button id="backToTopBtn" class="back-to-top-btn" title="برگشت به بالا">
    <i class="bi bi-chevron-up"></i>
</button>


<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script>

    function goToHome() {
        window.location.href = '/Home/Index';
    }
    
    const backToTopBtn = document.getElementById('backToTopBtn');
    const mainContainer = document.querySelector('.main');

    function toggleBackToTop() {
        if (mainContainer.scrollTop > 300) {
            backToTopBtn.style.display = 'flex';
        } else {
            backToTopBtn.style.display = 'none';
        }
    }

    // اسکرول container اصلی
    mainContainer.addEventListener('scroll', toggleBackToTop);

    // عملکرد کلیک دکمه - اسکرول container اصلی به بالا
    backToTopBtn.addEventListener('click', function(e) {
        e.preventDefault();
        mainContainer.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });

    // در ابتدا دکمه را مخفی کن
    backToTopBtn.style.display = 'none';

    document.getElementById('trackingForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const code = document.getElementById('trackingCode').value.trim();

        if (!code) {
            alert('لطفاً شماره نامه را وارد کنید');
            return;
        }

        searchTrackingCode(code);
    });

    function searchTrackingCode(code) {
        // نمایش loading
        document.getElementById('loading').style.display = 'block';
        document.getElementById('resultsContent').style.display = 'none';
        document.getElementById('resultsContainer').style.display = 'block';

        fetch(`/Letter/Search?trackingCode=${encodeURIComponent(code)}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('خطا در ارتباط با سرور');
                }
                return response.json();
            })
            .then(data => {
                displayResults(data);
            })
            .catch(error => {
                console.error('Error:', error);
                showError('خطا در دریافت اطلاعات');
            })
            .finally(() => {
                document.getElementById('loading').style.display = 'none';
                document.getElementById('resultsContent').style.display = 'block';

                // اسکرول به بخش نتایج - بهبود یافته
                setTimeout(() => {
                    const resultsContainer = document.getElementById('resultsContainer');
                    const containerPosition = resultsContainer.getBoundingClientRect().top + window.pageYOffset - 100;
                    window.scrollTo({
                        top: containerPosition,
                        behavior: 'smooth'
                    });
                }, 100);
            });
    }

    function displayResults(data) {
        const cardsContainer = document.getElementById('cardsContainer');
        const noResults = document.getElementById('noResults');
        const resultsCount = document.getElementById('resultsCount');

        cardsContainer.innerHTML = '';

        console.log('Received data:', data); // برای دیباگ

        if (!data || data.length === 0) {
            noResults.style.display = 'block';
            noResults.innerHTML = `
                <i class="bi bi-search text-warning" style="font-size: 3rem;"></i>
                <h5 class="mt-3">نتیجه‌ای یافت نشد</h5>
                <p class="text-light">هیچ نامه‌ای با این شماره پیدا نشد</p>
            `;
            resultsCount.textContent = '۰ نامه یافت شد';
            return;
        }

        noResults.style.display = 'none';
        resultsCount.textContent = `${data.length} نامه یافت شد`;

        data.forEach(item => {
            console.log('Item data:', item);

            const card = document.createElement('div');
            card.className = 'result-card fade-in';
            card.innerHTML = `
                <!-- هدر کارت -->
                <div class="card-header">
                    <div class="header-item subject-header">
                        <i class="bi bi-card-text icon-primary"></i>
                        <span>موضوع نامه</span>
                    </div>
                    <div class="header-item">
                        <i class="bi bi-hash icon-success"></i>
                        <span>شماره نامه</span>
                    </div>
                    <div class="header-item">
                        <i class="bi bi-calendar-date icon-warning"></i>
                        <span>تاریخ ارسال</span>
                    </div>
                </div>

                <!-- محتوای کارت -->
                <div class="card-body">
                    <div class="body-item subject-content">
                        <div class="subject-text" title="${item.docSubject || item.DocSubject || 'بدون موضوع'}">
                            ${item.docSubject || item.DocSubject || 'بدون موضوع'}
                        </div>
                    </div>
                    <div class="body-item">
                        <span class="content-value">${item.importEntityNumber || item.ImportEntityNumber || '-'}</span>
                    </div>
                    <div class="body-item">
                        <span class="content-value">${formatDate(item.importDate || item.ImportDate) || '-'}</span>
                    </div>
                </div>
            `;

            card.addEventListener('click', () => {
                showRecordDetails(item);
            });

            cardsContainer.appendChild(card);
        });

        // اسکرول به وسط صفحه
        setTimeout(() => {
            document.getElementById('resultsContainer').scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }, 100);

        // بعد از نمایش نتایج، دکمه برگشت به بالا را نشان بده
        setTimeout(() => {
            backToTopBtn.style.display = 'flex';
        }, 500);
    }



    function showError(message) {
        const cardsContainer = document.getElementById('cardsContainer');
        const noResults = document.getElementById('noResults');
        const resultsCount = document.getElementById('resultsCount');

        cardsContainer.innerHTML = '';
        resultsCount.textContent = 'خطا در دریافت اطلاعات';
        noResults.innerHTML = `
            <i class="bi bi-x-circle text-warning" style="font-size: 3rem;"></i>
            <h5 class="mt-3">خطا</h5>
            <p class="text-light">${message}</p>
        `;
        noResults.style.display = 'block';
    }

    function showRecordDetails(record) {
        const modalBody = document.getElementById('modalBody');

        modalBody.innerHTML = `
            <div class="text-center py-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">در حال بارگذاری...</span>
                </div>
                <p class="mt-2 text-white">در حال دریافت اطلاعات گردش نامه...</p>
            </div>
        `;

        if (!record.etc || !record.fec) {
            modalBody.innerHTML = `
                <div class="alert alert-danger text-center">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                    <p class="mt-2">خطا در اطلاعات رکورد</p>
                    <small>اطلاعات لازم برای جستجو موجود نمی‌باشد</small>
                </div>
            `;
            const modal = new bootstrap.Modal(document.getElementById('detailModal'));
            modal.show();
            return;
        }

        fetch(`/Letter/GetTrackingHistory?etc=${record.etc}&fec=${record.fec}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('خطا در دریافت اطلاعات گردش نامه');
                }
                return response.json();
            })
            .then(historyData => {
                displayTrackingHistory(record, historyData);
            })
            .catch(error => {
                console.error('Error:', error);
                modalBody.innerHTML = `
                    <div class="alert alert-danger text-center">
                        <i class="bi bi-exclamation-triangle-fill"></i>
                        <p class="mt-2">خطا در دریافت اطلاعات گردش نامه</p>
                        <small>${error.message}</small>
                    </div>
                `;
            });

        const modal = new bootstrap.Modal(document.getElementById('detailModal'));
        modal.show();
    }
    
    function formatDate(dateString) {
        if (!dateString) return '-';

        try {
        const date = new Date(dateString);
        if (isNaN(date.getTime())) {
            return '-';
        }
        return date.toLocaleDateString('fa-IR');
        } catch (error) {
        console.error('Error formatting date:', error);
        return '-';
        }
    }
    
    function formatDateTime(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('fa-IR') + ' - ' + date.toLocaleTimeString('fa-IR');
    }

    
    function displayTrackingHistory(record, historyData) {
        const modalBody = document.getElementById('modalBody');

        if (!historyData || historyData.length === 0 || historyData.error) {
            modalBody.innerHTML = `
                <div class="alert alert-warning text-center">
                    <i class="bi bi-info-circle-fill"></i>
                    <p class="mt-2">نامه دارای گردش نمی باشد.</p>
                    <small>ETC: ${record.etc}, FEC: ${record.fec}</small>
                </div>
            `;
            return;
        }

        // مرتب کردن تاریخ‌ها از جدید به قدیمی (معکوس)
        const sortedHistory = [...historyData].sort((a, b) => {
            const dateA = new Date(a.receiveDate || a.ReceiveDate || '2000-01-01');
            const dateB = new Date(b.receiveDate || b.ReceiveDate || '2000-01-01');
            return dateB - dateA;
        });

    let historyHTML = `
        <div class="info-card-modern-dark mb-4" style="background: rgba(255, 255, 255, 0.12); backdrop-filter: blur(15px); border-radius: 16px; padding: 25px; border: 1px solid rgba(255, 255, 255, 0.18); box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);">
            <h6 style="display: flex; align-items: center; gap: 10px; color: white; margin-bottom: 25px; font-size: 1.1rem; font-weight: 600;">
                <i class="bi bi-file-earmark-text" style="color: #4361ee; font-size: 1.3rem;"></i>
                <span>اطلاعات نامه</span>
            </h6>

            <div style="display: flex; flex-direction: column; gap: 16px;">
                <!-- شماره و تاریخ در یک ردیف -->
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
                    <!-- شماره نامه -->
                    <div style="display: flex; align-items: flex-start; gap: 15px; background: rgba(255, 255, 255, 0.08); padding: 12px 16px; border-radius: 12px; border-right: 3px solid #4361ee;">
                        <span style="color: rgba(255, 255, 255, 0.8); font-size: 0.95rem; font-weight: 500; min-width: 80px; display: flex; align-items: center; gap: 8px;">
                            <i class="bi bi-hash" style="color: #4361ee;"></i>
                            شماره:
                        </span>
                        <span style="color: white; font-weight: 600; flex: 1; text-align: center; font-size: 1.1rem;">
                            ${record.importEntityNumber || record.ImportEntityNumber || '-'}
                        </span>
                    </div>

                    <!-- تاریخ -->
                    <div style="display: flex; align-items: flex-start; gap: 15px; background: rgba(255, 255, 255, 0.08); padding: 12px 16px; border-radius: 12px; border-right: 3px solid #20c997;">
                        <span style="color: rgba(255, 255, 255, 0.8); font-size: 0.95rem; font-weight: 500; min-width: 80px; display: flex; align-items: center; gap: 8px;">
                            <i class="bi bi-calendar-date" style="color: #20c997;"></i>
                            تاریخ:
                        </span>
                        <span style="color: white; font-weight: 600; flex: 1; text-align: center; font-size: 1.1rem;">
                            ${formatDate(record.importDate || record.ImportDate) || '-'}
                        </span>
                    </div>
                </div>
                <!-- موضوع -->
                <div style="display: flex; align-items: flex-start; gap: 15px;">
                    <span style="color: rgba(255, 255, 255, 0.8); font-size: 0.95rem; font-weight: 500; min-width: 80px;">موضوع:</span>
                    <span style="color: white; font-weight: 500; flex: 1; text-align: right; line-height: 1.5; background: rgba(255, 255, 255, 0.08); padding: 12px 16px; border-radius: 12px; border-right: 3px solid #4361ee;">
                        ${record.docSubject || record.DocSubject || 'بدون موضوع'}
                    </span>
                </div>
            </div>
        </div>
    `;

        sortedHistory.forEach((item, index) => {
            const isCurrent = index === 0;
            const receiverName = item.receiverName || item.ReceiverName || 'نامشخص';
            const receiveDate = item.receiveDate || item.ReceiveDate;

            let iconClass = "bi-arrow-left";
            if (index === 0) iconClass = "bi-pin-map";
            if (index === sortedHistory.length - 1) iconClass = "bi-arrow-left";

            let markerColor = "bg-primary";
            if (index === 0) markerColor = "bg-success";
            if (index === sortedHistory.length - 1) markerColor = "bg-info";

            historyHTML += `
                <div class="timeline-item-modern-right-dark">
                    <div class="timeline-marker-modern-right-dark ${markerColor} ${isCurrent ? 'current' : ''}">
                        <i class="bi ${iconClass} text-white"></i>
                    </div>
                    <div class="timeline-content-modern-right-dark ${isCurrent ? 'current' : ''}">
                        ${isCurrent ? `<div class="current-badge-dark"><i class="bi bi-geo-alt"></i> مدرک الان اینجاست</div>` : ''}
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h6 class="mb-0 text-white">${receiverName}</h6>
                            <small class="text-light opacity-75">${receiveDate ? formatDateTime(receiveDate) : 'تاریخ نامشخص'}</small>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-light opacity-75">مرحله ${sortedHistory.length - index}</small>
                            <small class="text-light opacity-75">گیرنده: ${receiverName}</small>
                        </div>
                    </div>
                </div>
            `;
        });

        historyHTML += `</div>`;

        modalBody.innerHTML = historyHTML;
    }
    
    function getProperty(obj, prop1, prop2) {
        return obj[prop1] || obj[prop2];
    }
    // بهبود اسکرول صفحه
    document.addEventListener('DOMContentLoaded', function() {
        document.body.style.overflowX = 'hidden';
        const cards = document.querySelectorAll('.card-glass-large');
        cards.forEach(card => {
            card.style.minHeight = 'auto';
        });
    });
</script>