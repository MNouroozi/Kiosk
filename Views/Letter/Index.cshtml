@{
    ViewData["Title"] = "پیگیری نامه";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container text-center">
    <div class="row justify-content-center align-items-center">
        <div class="col-12 col-md-8 col-lg-6">
            <!-- کارت شیشه‌ای اصلی -->
            <div class="card-glass-large fade-in">
                <div class="text-center mb-4">
                    <h3 class="tracking-title">پیگیری وضعیت نامه</h3>
                </div>

                <i class="bi bi-file-earmark-text tracking-icon-large"></i>
                <p class="tracking-description-light">برای پیگیری وضعیت نامه خود، شماره نامه را در قسمت زیر وارد کنید.</p>

                <form id="trackingForm" class="mt-4">
                    <div class="mb-4">
                        <input type="text" id="trackingCode" class="form-control-glass form-control-lg"
                               placeholder="شماره نامه را وارد کنید" required>
                    </div>

                    <!-- دکمه‌های کنار هم -->
                    <div class="d-flex gap-3">
                        <button type="submit" class="btn-glass-primary btn-lg flex-fill">
                            <i class="bi bi-search me-2"></i> پیگیری نامه
                        </button>
                        <button id="backButton" type="button" class="btn-glass-secondary btn-lg flex-fill" onclick="goToHome()">
                            <i class="bi bi-house-door"></i>منوی اصلی
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- بخش نمایش نتایج -->
    <div class="row justify-content-center">
        <div class="col-12">
            <div id="resultsContainer" class="card-glass-large fade-in mt-4" style="display: none; min-height: 300px;">
                <!-- هدر جدید برای نتایج -->
                <div class="results-header text-center mb-4">
                    <i class="bi bi-search-heart results-header-icon"></i>
                    <h4 class="results-header-title">نتایج جستجو</h4>
                    <p class="results-header-subtitle" id="resultsCount">لیست نامه‌های یافت شده</p>
                </div>

                <div class="loading text-white" id="loading">
                    <div class="spinner-border text-light" role="status">
                        <span class="visually-hidden">در حال جستجو...</span>
                    </div>
                    <p class="mt-2">در حال جستجو...</p>
                </div>

                <div id="resultsContent">
                    <div class="cards-container" id="cardsContainer">
                        <!-- کارت‌ها اینجا نمایش داده می‌شوند -->
                    </div>
                    <div id="noResults" class="text-center text-light mt-3" style="display:none;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- مودال بهبود یافته با تم دارک هماهنگ -->
<div class="modal fade" id="detailModal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content modal-dark-theme">
            <div class="modal-header text-center border-bottom-0">
                <div class="w-100">
                    <i class="bi bi-diagram-3 text-primary modal-header-icon"></i>
                    <h5 class="modal-title text-white">گردش نامه</h5>
                </div>
                <button type="button" class="btn-close btn-close-white position-absolute" style="top: 20px; left: 20px;" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalBody" style="max-height: 70vh; overflow-y: auto;">
                <!-- محتوای جزئیات اینجا نمایش داده می‌شود -->
            </div>
            <div class="modal-footer border-top-0">
                <button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #4361ee;
        --secondary-color: #3a0ca3;
        --glass-bg: rgba(255, 255, 255, 0.15);
        --glass-border: rgba(255, 255, 255, 0.2);
        --shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
        --card-bg-1: rgba(255, 255, 255, 0.12);
        --card-bg-2: rgba(255, 255, 255, 0.08);
    }

    /* کارت شیشه‌ای بزرگ */
    .card-glass-large {
        background: var(--glass-bg);
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
        border: 1px solid var(--glass-border);
        border-radius: 25px;
        padding: 50px 40px;
        text-align: center;
        box-shadow: var(--shadow);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        width: 100%;
        min-height: 500px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin-bottom: 30px;
    }

    .tracking-icon-large {
        font-size: 5rem;
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 30px;
    }

    .tracking-title {
        font-family: Vazir, sans-serif;
        font-weight: 700;
        font-size: 2rem;
        margin-bottom: 20px;
        color: white;
    }

    .tracking-description-light {
        font-family: Vazir, sans-serif;
        font-weight: 400;
        font-size: 1.2rem;
        margin-bottom: 30px;
        color: rgba(255, 255, 255, 0.9);
        line-height: 1.6;
    }

    /* فرم کنترل شیشه‌ای */
    .form-control-glass {
        font-family: Vazir, sans-serif;
        font-weight: 400;
        text-align: center;
        border-radius: 15px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        padding: 20px 25px;
        font-size: 1.3rem;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        backdrop-filter: blur(10px);
    }

        .form-control-glass::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .form-control-glass:focus {
            border-color: rgba(255, 255, 255, 0.6);
            box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.1);
            background: rgba(255, 255, 255, 0.15);
            color: white;
        }

    /* دکمه شیشه‌ای اولیه */
    .btn-glass-primary {
        font-family: Vazir, sans-serif;
        font-weight: 500;
        background: linear-gradient(135deg, rgba(67, 97, 238, 0.85), rgba(58, 12, 163, 0.85));
        border: none;
        border-radius: 50px;
        padding: 20px 45px;
        font-size: 1.4rem;
        margin-top: 25px;
        box-shadow: 0 5px 20px rgba(67, 97, 238, 0.3);
        transition: all 0.3s ease;
        color: white;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.25);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-glass-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(67, 97, 238, 0.5);
            background: linear-gradient(135deg, rgba(67, 97, 238, 0.95), rgba(58, 12, 163, 0.95));
            color: white;
        }

    /* دکمه شیشه‌ای ثانویه برای بازگشت */
    .btn-glass-secondary {
        font-family: Vazir, sans-serif;
        font-weight: 500;
        background: linear-gradient(135deg, rgba(255, 215, 0, 0.7), rgba(218, 165, 32, 0.7));
        border: none;
        border-radius: 50px;
        padding: 20px 45px;
        font-size: 1.4rem;
        margin-top: 25px;
        box-shadow: 0 5px 20px rgba(255, 215, 0, 0.25);
        transition: all 0.3s ease;
        color: white;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        flex-direction: row-reverse;
    }

        .btn-glass-secondary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(255, 215, 0, 0.4);
            background: linear-gradient(135deg, rgba(255, 215, 0, 0.8), rgba(218, 165, 32, 0.8));
            color: white;
        }

    /* هدر نتایج */
    .results-header {
        padding: 20px 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        margin-bottom: 30px;
    }

    .results-header-icon {
        font-size: 3rem;
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 15px;
    }

    .results-header-title {
        font-family: Vazir, sans-serif;
        font-weight: 700;
        font-size: 1.8rem;
        color: white;
        margin-bottom: 10px;
    }

    .results-header-subtitle {
        font-family: Vazir, sans-serif;
        font-weight: 400;
        color: rgba(255, 255, 255, 0.7);
        font-size: 1.1rem;
    }

    /* ساختار جدید کارت‌های نتایج */
    .cards-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
        padding: 0 10px;
    }

    .result-card {
        background: var(--card-bg-1);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 0;
        border: 1px solid rgba(255, 255, 255, 0.15);
        transition: all 0.2s ease;
        cursor: pointer;
        overflow: hidden;
    }

        .result-card:nth-child(even) {
            background: var(--card-bg-2);
        }

        .result-card:hover {
            background: rgba(67, 97, 238, 0.15);
            border-color: rgba(67, 97, 238, 0.4);
        }

    /* هدر کارت */
    .card-header {
        display: grid;
        grid-template-columns: 1fr auto auto;
        gap: 30px;
        align-items: center;
        padding: 20px 25px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        background: rgba(255, 255, 255, 0.05);
    }

    .header-item {
        display: flex;
        align-items: center;
        gap: 8px;
        color: rgba(255, 255, 255, 0.8);
        font-size: 0.9rem;
        font-weight: 500;
    }

        .header-item.subject-header {
            justify-content: flex-start;
            text-align: right;
            direction:rtl;
        }

    /* بدنه کارت */
    .card-body {
        display: grid;
        grid-template-columns: 1fr auto auto;
        gap: 30px;
        align-items: start;
        padding: 25px;
    }

    .body-item {
        display: flex;
        align-items: flex-start;
    }

        .body-item.subject-content {
            justify-content: flex-start;
            text-align: right;
            direction: rtl;
        }

    .subject-text {
        color: white;
        font-weight: 500;
        font-size: 1.1rem;
        line-height: 1.6;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: right;
        direction: rtl;
        word-wrap: break-word;
        word-break: break-word;
        white-space: normal;
        max-width: 100%; /* اضافه کردن این خط */
    }

    .content-value {
        color: white;
        font-weight: 600;
        font-size: 1rem;
        text-align: center;
        white-space: nowrap; /* جلوگیری از شکستن خط برای تاریخ و شماره */
    }

    /* رنگ‌های مناسب برای آیکون‌ها */
    .icon-primary {
        color: #4361ee;
    }

    .icon-success {
        color: #28a745;
    }

    .icon-warning {
        color: #ffc107;
    }

    /* انیمیشن‌ها */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in {
        animation: fadeIn 0.8s ease forwards;
    }

    .loading {
        display: none;
        text-align: center;
        padding: 30px;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }

    /* ریسپانسیو */
    @@media (max-width: 768px) {
        .card-glass-large {
            padding: 30px 20px;
            min-height: 400px;
        }

        .tracking-icon-large {
            font-size: 3.5rem;
        }

        .tracking-title {
            font-size: 1.6rem;
        }

        .tracking-description-light {
            font-size: 1rem;
        }

        .form-control-glass {
            padding: 15px 20px;
            font-size: 1.1rem;
        }

        .btn-glass-primary,
        .btn-glass-secondary {
            padding: 18px 35px;
            font-size: 1.2rem;
        }

        .results-header-icon {
            font-size: 2.5rem;
        }

        .results-header-title {
            font-size: 1.5rem;
        }

        .card-header {
            grid-template-columns: 1fr;
            gap: 15px;
            text-align: center;
            padding: 15px 20px;
        }

        .header-item.subject-header {
            justify-content: center;
            text-align: center;
        }

        .card-body {
            grid-template-columns: 1fr;
            gap: 15px;
            padding: 20px;
            text-align: center;
        }

        .body-item.subject-content {
            justify-content: center;
            text-align: center;
        }

        .subject-text {
            text-align: center;
        }
    }

    /* استایل Timeline مدرن - سمت راست برای تم دارک */
    .timeline-modern-right-dark {
        position: relative;
        padding: 20px 0;
    }

        .timeline-modern-right-dark::before {
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            right: 30px;
            width: 3px;
            background: linear-gradient(to bottom, rgba(67, 97, 238, 0.8), rgba(58, 12, 163, 0.8));
            border-radius: 10px;
        }

    .timeline-item-modern-right-dark {
        position: relative;
        margin-bottom: 30px;
        padding-right: 70px;
    }

    .timeline-marker-modern-right-dark {
        position: absolute;
        right: 18px;
        top: 0;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2;
        box-shadow: 0 0 0 4px rgba(67, 97, 238, 0.2);
        transition: all 0.3s ease;
    }

        .timeline-marker-modern-right-dark.current {
            animation: pulse 2s infinite;
            box-shadow: 0 0 0 8px rgba(67, 97, 238, 0.3);
        }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(67, 97, 238, 0.7);
        }

        70% {
            box-shadow: 0 0 0 10px rgba(67, 97, 238, 0);
        }

        100% {
            box-shadow: 0 0 0 0 rgba(67, 97, 238, 0);
        }
    }

    .timeline-content-modern-right-dark {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 20px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        color: white;
    }

        .timeline-content-modern-right-dark.current {
            background: rgba(67, 97, 238, 0.15);
            border: 1px solid rgba(67, 97, 238, 0.4);
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(67, 97, 238, 0.2);
        }

    .current-badge-dark {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 5px;
        margin-bottom: 10px;
    }

    /* تم دارک برای مودال */
    .modal-dark-theme {
        background: rgba(33, 37, 41, 0.95);
        backdrop-filter: blur(20px);
        color: white;
        border-radius: 20px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .modal-dark-theme .modal-header {
            background: transparent;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            text-align: center;
            padding: 30px 20px 20px;
            position: relative;
        }

    .modal-header-icon {
        font-size: 2.5rem;
        margin-bottom: 10px;
    }

    .modal-dark-theme .modal-title {
        color: white;
        font-weight: 600;
        font-size: 1.5rem;
        margin: 0;
    }

    .modal-dark-theme .modal-footer {
        background: transparent;
        border-top: 1px solid rgba(255, 255, 255, 0.2);
    }

    /* کارت اطلاعات مدرن برای تم دارک */
    .info-card-modern-dark {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 20px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        margin-bottom: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

        .info-card-modern-dark h6 {
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 600;
        }

    .info-item-dark {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

        .info-item-dark:last-child {
            border-bottom: none;
        }

    .info-label-dark {
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.9rem;
        font-weight: 500;
    }

    .info-value-dark {
        color: white;
        font-weight: 600;
    }

    .modal {
        z-index: 1060 !important;
    }

    .modal-backdrop {
        z-index: 1050 !important;
        background-color: rgba(0, 0, 0, 0.7) !important;
    }

    header {
        z-index: 1000 !important;
    }

    /* اسکرول صاف */
    html {
        scroll-behavior: smooth;
    }

    body {
        overflow-x: hidden;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // تابع رفتن به صفحه اصلی
    function goToHome() {
        window.location.href = '/Home/Index';
    }

    document.getElementById('trackingForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const code = document.getElementById('trackingCode').value.trim();

        if (!code) {
            alert('لطفاً شماره نامه را وارد کنید');
            return;
        }

        searchTrackingCode(code);
    });

    function searchTrackingCode(code) {
        // نمایش loading
        document.getElementById('loading').style.display = 'block';
        document.getElementById('resultsContent').style.display = 'none';
        document.getElementById('resultsContainer').style.display = 'block';

        fetch(`/Letter/Search?trackingCode=${encodeURIComponent(code)}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('خطا در ارتباط با سرور');
                }
                return response.json();
            })
            .then(data => {
                displayResults(data);
            })
            .catch(error => {
                console.error('Error:', error);
                showError('خطا در دریافت اطلاعات');
            })
            .finally(() => {
                document.getElementById('loading').style.display = 'none';
                document.getElementById('resultsContent').style.display = 'block';

                // اسکرول به بخش نتایج - بهبود یافته
                setTimeout(() => {
                    const resultsContainer = document.getElementById('resultsContainer');
                    const containerPosition = resultsContainer.getBoundingClientRect().top + window.pageYOffset - 100;
                    window.scrollTo({
                        top: containerPosition,
                        behavior: 'smooth'
                    });
                }, 100);
            });
    }

    function displayResults(data) {
        const cardsContainer = document.getElementById('cardsContainer');
        const noResults = document.getElementById('noResults');
        const resultsCount = document.getElementById('resultsCount');

        cardsContainer.innerHTML = '';

        console.log('Received data:', data); // برای دیباگ

        if (!data || data.length === 0) {
            noResults.style.display = 'block';
            noResults.innerHTML = `
                <i class="bi bi-search text-warning" style="font-size: 3rem;"></i>
                <h5 class="mt-3">نتیجه‌ای یافت نشد</h5>
                <p class="text-light">هیچ نامه‌ای با این شماره پیدا نشد</p>
            `;
            resultsCount.textContent = '۰ نامه یافت شد';
            return;
        }

        noResults.style.display = 'none';
        resultsCount.textContent = `${data.length} نامه یافت شد`;

        data.forEach(item => {
            console.log('Item data:', item); // برای بررسی ساختار داده‌ها

            const card = document.createElement('div');
            card.className = 'result-card fade-in';
            card.innerHTML = `
                <!-- هدر کارت -->
                <div class="card-header">
                    <div class="header-item subject-header">
                        <i class="bi bi-card-text icon-primary"></i>
                        <span>موضوع نامه</span>
                    </div>
                    <div class="header-item">
                        <i class="bi bi-hash icon-success"></i>
                        <span>شماره نامه</span>
                    </div>
                    <div class="header-item">
                        <i class="bi bi-calendar-date icon-warning"></i>
                        <span>تاریخ ارسال</span>
                    </div>
                </div>

                <!-- محتوای کارت -->
                <div class="card-body">
                    <div class="body-item subject-content">
                        <div class="subject-text" title="${item.docSubject || item.DocSubject || 'بدون موضوع'}">
                            ${item.docSubject || item.DocSubject || 'بدون موضوع'}
                        </div>
                    </div>
                    <div class="body-item">
                        <span class="content-value">${item.importEntityNumber || item.ImportEntityNumber || '-'}</span>
                    </div>
                    <div class="body-item">
                        <span class="content-value">${formatDate(item.importDate || item.ImportDate) || '-'}</span>
                    </div>
                </div>
            `;

            card.addEventListener('click', () => {
                showRecordDetails(item);
            });

            cardsContainer.appendChild(card);
        });
    }

    function formatDate(dateString) {
        if (!dateString) return '-';

        try {
            const date = new Date(dateString);
            if (isNaN(date.getTime())) {
                return '-';
            }
            return date.toLocaleDateString('fa-IR');
        } catch (error) {
            console.error('Error formatting date:', error);
            return '-';
        }
    }

    function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('fa-IR');
    }

    function showError(message) {
        const cardsContainer = document.getElementById('cardsContainer');
        const noResults = document.getElementById('noResults');
        const resultsCount = document.getElementById('resultsCount');

        cardsContainer.innerHTML = '';
        resultsCount.textContent = 'خطا در دریافت اطلاعات';
        noResults.innerHTML = `
            <i class="bi bi-x-circle text-warning" style="font-size: 3rem;"></i>
            <h5 class="mt-3">خطا</h5>
            <p class="text-light">${message}</p>
        `;
        noResults.style.display = 'block';
    }

    function showRecordDetails(record) {
        const modalBody = document.getElementById('modalBody');

        modalBody.innerHTML = `
            <div class="text-center py-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">در حال بارگذاری...</span>
                </div>
                <p class="mt-2 text-white">در حال دریافت اطلاعات گردش نامه...</p>
            </div>
        `;

        if (!record.etc || !record.fec) {
            modalBody.innerHTML = `
                <div class="alert alert-danger text-center">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                    <p class="mt-2">خطا در اطلاعات رکورد</p>
                    <small>اطلاعات لازم برای جستجو موجود نمی‌باشد</small>
                </div>
            `;
            const modal = new bootstrap.Modal(document.getElementById('detailModal'));
            modal.show();
            return;
        }

        fetch(`/Letter/GetTrackingHistory?etc=${record.etc}&fec=${record.fec}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('خطا در دریافت اطلاعات گردش نامه');
                }
                return response.json();
            })
            .then(historyData => {
                displayTrackingHistory(record, historyData);
            })
            .catch(error => {
                console.error('Error:', error);
                modalBody.innerHTML = `
                    <div class="alert alert-danger text-center">
                        <i class="bi bi-exclamation-triangle-fill"></i>
                        <p class="mt-2">خطا در دریافت اطلاعات گردش نامه</p>
                        <small>${error.message}</small>
                    </div>
                `;
            });

        const modal = new bootstrap.Modal(document.getElementById('detailModal'));
        modal.show();
    }

    function displayTrackingHistory(record, historyData) {
        const modalBody = document.getElementById('modalBody');

        if (!historyData || historyData.length === 0 || historyData.error) {
            modalBody.innerHTML = `
                <div class="alert alert-warning text-center">
                    <i class="bi bi-info-circle-fill"></i>
                    <p class="mt-2">اطلاعات گردش نامه یافت نشد</p>
                    <small>ETC: ${record.etc}, FEC: ${record.fec}</small>
                </div>
            `;
            return;
        }

        // مرتب کردن تاریخ‌ها از جدید به قدیمی (معکوس)
        const sortedHistory = [...historyData].sort((a, b) => {
            const dateA = new Date(a.receiveDate || a.ReceiveDate || '2000-01-01');
            const dateB = new Date(b.receiveDate || b.ReceiveDate || '2000-01-01');
            return dateB - dateA; // تغییر به dateB - dateA برای معکوس کردن
        });

        let historyHTML = `
            <div class="info-card-modern-dark mb-4">
                <h6><i class="bi bi-file-earmark-text"></i> اطلاعات نامه</h6>
                <div class="info-item-dark">
                    <span class="info-label-dark">شماره نامه:</span>
                    <span class="info-value-dark">${record.ImportEntityNumber || '-'}</span>
                </div>
                <div class="info-item-dark">
                    <span class="info-label-dark">موضوع:</span>
                    <span class="info-value-dark">${record.docSubject || 'بدون موضوع'}</span>
                </div>
                <div class="info-item-dark">
                    <span class="info-label-dark">تاریخ :</span>
                    <span class="info-value-dark">${record.ImportDate ? formatDate(record.ImportDate) : '-'}</span>
                </div>
            </div>

            <div class="d-flex align-items-center justify-content-between mb-3">
                <h5 class="mb-0 text-white">گردش نامه</h5>
                <span class="badge bg-primary">${sortedHistory.length} مرحله</span>
            </div>

            <div class="timeline-modern-right-dark">
        `;

        sortedHistory.forEach((item, index) => {
            const isCurrent = index === 0; // اولین رکورد (جدیدترین) فعلی است
            const receiverName = item.receiverName || item.ReceiverName || 'نامشخص';
            const receiveDate = item.receiveDate || item.ReceiveDate;

            // تعیین آیکون بر اساس موقعیت
            let iconClass = "bi-arrow-left";
            if (index === 0) iconClass = "bi-pin-map";
            if (index === sortedHistory.length - 1) iconClass = "bi-arrow-left";

            // تعیین رنگ بر اساس موقعیت
            let markerColor = "bg-primary";
            if (index === 0) markerColor = "bg-success";
            if (index === sortedHistory.length - 1) markerColor = "bg-info";

            historyHTML += `
                <div class="timeline-item-modern-right-dark">
                    <div class="timeline-marker-modern-right-dark ${markerColor} ${isCurrent ? 'current' : ''}">
                        <i class="bi ${iconClass} text-white"></i>
                    </div>
                    <div class="timeline-content-modern-right-dark ${isCurrent ? 'current' : ''}">
                        ${isCurrent ? `<div class="current-badge-dark"><i class="bi bi-geo-alt"></i> مدرک الان اینجاست</div>` : ''}
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h6 class="mb-0 text-white">${receiverName}</h6>
                            <small class="text-light opacity-75">${receiveDate ? formatDateTime(receiveDate) : 'تاریخ نامشخص'}</small>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-light opacity-75">مرحله ${sortedHistory.length - index}</small>
                            <small class="text-light opacity-75">گیرنده: ${receiverName}</small>
                        </div>
                    </div>
                </div>
            `;
        });

        historyHTML += `</div>`;

        modalBody.innerHTML = historyHTML;
    }

    function formatDateTime(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('fa-IR') + ' - ' + date.toLocaleTimeString('fa-IR');
    }

    // بهبود اسکرول صفحه
    document.addEventListener('DOMContentLoaded', function() {
        document.body.style.overflowX = 'hidden';
        const cards = document.querySelectorAll('.card-glass-large');
        cards.forEach(card => {
            card.style.minHeight = 'auto';
        });
    });

</script>